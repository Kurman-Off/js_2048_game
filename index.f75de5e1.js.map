{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\n// const Game = require('../modules/Game.class');\n// const game = new Game();\nconst score = [];\nlet gameOver = false;\n\nfunction getRows() {\n  const rows = document.querySelectorAll('.field-row');\n  const matrix = [];\n\n  rows.forEach((row) => {\n    const cells = row.querySelectorAll('.field-cell');\n    const rowArray = [];\n\n    cells.forEach((cell) => {\n      rowArray.push(cell.textContent);\n    });\n\n    matrix.push(rowArray);\n  });\n\n  return matrix;\n}\n\nfunction transposeMatrix(matrix) {\n  return matrix[0].map((_, colIndex) => matrix.map((row) => row[colIndex]));\n}\n\nfunction randomNumbers() {\n  return Math.random() < 0.1 ? 4 : 2;\n}\n\nfunction addRandomNumberToRow(matrix) {\n  const emptyCells = [];\n\n  matrix.forEach((row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      if (cell === '') {\n        emptyCells.push({ rowIndex, colIndex });\n      }\n    });\n  });\n\n  if (emptyCells.length > 0) {\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const { rowIndex, colIndex } = emptyCells[randomIndex];\n\n    matrix[rowIndex][colIndex] = randomNumbers();\n\n    const cellToFill = document\n      .querySelectorAll('.field-row')\n      [rowIndex].querySelectorAll('.field-cell')[colIndex];\n\n    cellToFill.textContent = matrix[rowIndex][colIndex];\n  }\n}\n\nfunction statusButton() {\n  const startBtn = document.querySelector('.start');\n  const startNotification = document.querySelector('.message-start');\n  const winNotification = document.querySelector('.message-win');\n  const loseNotification = document.querySelector('.message-lose');\n  let stat = false;\n\n  const clickHandler = () => {\n    stat = !stat;\n\n    if (stat) {\n      const matrix = getRows();\n\n      startBtn.textContent = 'Restart';\n      startNotification.style.display = 'none';\n\n      init();\n      handleTouchEvents();\n      addRandomNumberToRow(matrix);\n      addRandomNumberToRow(matrix);\n    } else {\n      startBtn.textContent = 'Start';\n      startNotification.style.display = 'block';\n      winNotification.style.display = 'none';\n      loseNotification.style.display = 'none';\n      gameOver = false;\n      resetMatrix();\n      resetScore();\n    }\n  };\n\n  startBtn.addEventListener('click', clickHandler);\n}\n\nfunction resetMatrix() {\n  const rows = document.querySelectorAll('.field-row');\n\n  rows.forEach((row) => {\n    row.querySelectorAll('.field-cell').forEach((cell) => {\n      cell.textContent = '';\n    });\n  });\n}\n\nfunction moveRight(matrix) {\n  if (gameOver) {\n    return;\n  }\n\n  const newMatrix = matrix.map((row) => {\n    const rowWithoutEmptyElements = [];\n    const newRow = [];\n\n    for (let i = 0; i < row.length; i++) {\n      const cell = Number(row[i]); // Перетворюємо значення в число\n\n      if (!isNaN(cell) && cell !== 0) {\n        rowWithoutEmptyElements.push(cell);\n      }\n    }\n\n    rowWithoutEmptyElements.reverse();\n\n    for (let i = 0; i < rowWithoutEmptyElements.length; i++) {\n      if (rowWithoutEmptyElements[i] === rowWithoutEmptyElements[i + 1]) {\n        newRow.push(rowWithoutEmptyElements[i] * 2);\n        score.push(rowWithoutEmptyElements[i] * 2);\n        i++;\n      } else {\n        newRow.push(rowWithoutEmptyElements[i]);\n      }\n    }\n\n    newRow.reverse();\n\n    while (newRow.length < row.length) {\n      newRow.unshift('');\n    }\n\n    return newRow;\n  });\n\n  const matrixChanged = !matrix.every((row, rowIndex) => {\n    return row.every((cell, colIndex) => {\n      return Number(cell) === Number(newMatrix[rowIndex][colIndex]);\n    });\n  });\n\n  newMatrix.forEach((row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      const cellToFill = document\n        .querySelectorAll('.field-row')\n        [rowIndex].querySelectorAll('.field-cell')[colIndex];\n\n      cellToFill.textContent = cell;\n    });\n  });\n\n  if (matrixChanged) {\n    addRandomNumberToRow(newMatrix);\n  }\n\n  const totalScore = score.reduce((sum, currentScore) => sum + currentScore, 0);\n\n  updateScore(totalScore);\n  statusWin(newMatrix);\n  statusLose(newMatrix);\n\n  return newMatrix;\n}\n\nfunction moveLeft(matrix) {\n  if (gameOver) {\n    return;\n  }\n\n  const newMatrix = matrix.map((row) => {\n    const rowWithoutEmptyElements = [];\n    const newRow = [];\n\n    for (let i = 0; i < row.length; i++) {\n      const cell = Number(row[i]); // Перетворюємо значення в число\n\n      if (!isNaN(cell) && cell !== 0) {\n        rowWithoutEmptyElements.push(cell);\n      }\n    }\n\n    for (let i = 0; i < rowWithoutEmptyElements.length; i++) {\n      if (rowWithoutEmptyElements[i] === rowWithoutEmptyElements[i + 1]) {\n        newRow.push(rowWithoutEmptyElements[i] * 2);\n        score.push(rowWithoutEmptyElements[i] * 2);\n        i++;\n      } else {\n        newRow.push(rowWithoutEmptyElements[i]);\n      }\n    }\n\n    while (newRow.length < row.length) {\n      newRow.push('');\n    }\n\n    return newRow;\n  });\n\n  const matrixChanged = !matrix.every((row, rowIndex) => {\n    return row.every((cell, colIndex) => {\n      return Number(cell) === Number(newMatrix[rowIndex][colIndex]);\n    });\n  });\n\n  newMatrix.forEach((row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      const cellToFill = document\n        .querySelectorAll('.field-row')\n        [rowIndex].querySelectorAll('.field-cell')[colIndex];\n\n      cellToFill.textContent = cell;\n    });\n  });\n\n  if (matrixChanged) {\n    addRandomNumberToRow(newMatrix);\n  }\n\n  const totalScore = score.reduce((sum, currentScore) => sum + currentScore, 0);\n\n  updateScore(totalScore);\n  statusWin(newMatrix);\n  statusLose(newMatrix);\n\n  return newMatrix;\n}\n\nfunction moveUp(matrix) {\n  if (gameOver) {\n    return;\n  }\n\n  const newMatrix = transposeMatrix(matrix).map((row) => {\n    const rowWithoutEmptyElements = [];\n    const newRow = [];\n\n    for (let i = 0; i < row.length; i++) {\n      const cell = Number(row[i]); // Перетворюємо значення в число\n\n      if (!isNaN(cell) && cell !== 0) {\n        rowWithoutEmptyElements.push(cell);\n      }\n    }\n\n    for (let i = 0; i < rowWithoutEmptyElements.length; i++) {\n      if (rowWithoutEmptyElements[i] === rowWithoutEmptyElements[i + 1]) {\n        newRow.push(rowWithoutEmptyElements[i] * 2);\n        score.push(rowWithoutEmptyElements[i] * 2);\n        i++;\n      } else {\n        newRow.push(rowWithoutEmptyElements[i]);\n      }\n    }\n\n    while (newRow.length < row.length) {\n      newRow.push('');\n    }\n\n    return newRow;\n  });\n\n  const finalMatrix = transposeMatrix(newMatrix);\n\n  const matrixChanged = !matrix.every((row, rowIndex) => {\n    return row.every((cell, colIndex) => {\n      return Number(cell) === Number(finalMatrix[rowIndex][colIndex]);\n    });\n  });\n\n  finalMatrix.forEach((row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      const cellToFill = document\n        .querySelectorAll('.field-row')\n        [rowIndex].querySelectorAll('.field-cell')[colIndex];\n\n      cellToFill.textContent = cell;\n    });\n  });\n\n  if (matrixChanged) {\n    addRandomNumberToRow(finalMatrix);\n  }\n\n  const totalScore = score.reduce((sum, currentScore) => sum + currentScore, 0);\n\n  updateScore(totalScore);\n  statusWin(finalMatrix);\n  statusLose(finalMatrix);\n\n  return finalMatrix;\n}\n\nfunction moveDown(matrix) {\n  if (gameOver) {\n    return;\n  }\n\n  const newMatrix = transposeMatrix(matrix).map((row) => {\n    const rowWithoutEmptyElements = [];\n    const newRow = [];\n\n    for (let i = 0; i < row.length; i++) {\n      const cell = Number(row[i]); // Перетворюємо значення в число\n\n      if (!isNaN(cell) && cell !== 0) {\n        rowWithoutEmptyElements.push(cell);\n      }\n    }\n\n    rowWithoutEmptyElements.reverse();\n\n    for (let i = 0; i < rowWithoutEmptyElements.length; i++) {\n      if (rowWithoutEmptyElements[i] === rowWithoutEmptyElements[i + 1]) {\n        newRow.push(rowWithoutEmptyElements[i] * 2);\n        score.push(rowWithoutEmptyElements[i] * 2);\n        i++;\n      } else {\n        newRow.push(rowWithoutEmptyElements[i]);\n      }\n    }\n\n    newRow.reverse();\n\n    while (newRow.length < row.length) {\n      newRow.unshift('');\n    }\n\n    return newRow;\n  });\n\n  const finalMatrix = transposeMatrix(newMatrix);\n\n  const matrixChanged = !matrix.every((row, rowIndex) => {\n    return row.every((cell, colIndex) => {\n      return Number(cell) === Number(finalMatrix[rowIndex][colIndex]);\n    });\n  });\n\n  finalMatrix.forEach((row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      const cellToFill = document\n        .querySelectorAll('.field-row')\n        [rowIndex].querySelectorAll('.field-cell')[colIndex];\n\n      cellToFill.textContent = cell;\n    });\n  });\n\n  if (matrixChanged) {\n    addRandomNumberToRow(finalMatrix);\n  }\n\n  const totalScore = score.reduce((sum, currentScore) => sum + currentScore, 0);\n\n  updateScore(totalScore);\n  statusWin(finalMatrix);\n  statusLose(finalMatrix);\n\n  return finalMatrix;\n}\n\nfunction updateScore(scores) {\n  const scoreElement = document.querySelector('.game-score');\n\n  if (scoreElement) {\n    scoreElement.textContent = scores;\n  }\n}\n\nfunction resetScore() {\n  score.length = 0;\n  updateScore(0);\n}\n\nfunction statusWin(matrix) {\n  if (matrix.some((row) => row.some((cell) => cell >= 2048))) {\n    const winNotification = document.querySelector('.message-win');\n\n    if (winNotification) {\n      winNotification.style.display = 'block';\n      gameOver = true;\n    }\n  }\n}\n\nfunction statusLose(matrix) {\n  const allCellsFilled = matrix.every((row) => {\n    return row.every((cell) => {\n      return Number(cell) !== 0;\n    });\n  });\n\n  if (allCellsFilled) {\n    const canMerge = matrix.some((row, rowIndex) => {\n      return row.some((cell, colIndex) => {\n        const rightMerge =\n          colIndex < row.length - 1 &&\n          Number(cell) === Number(row[colIndex + 1]);\n        const downMerge =\n          rowIndex < matrix.length - 1 &&\n          Number(cell) === Number(matrix[rowIndex + 1][colIndex]);\n\n        return rightMerge || downMerge;\n      });\n    });\n\n    if (!canMerge) {\n      const loseNotification = document.querySelector('.message-lose');\n\n      if (loseNotification) {\n        loseNotification.style.display = 'block';\n        gameOver = true;\n      }\n    }\n  }\n}\n\nfunction init() {\n  const moveFunctions = {\n    ArrowRight: moveRight,\n    ArrowLeft: moveLeft,\n    ArrowUp: moveUp,\n    ArrowDown: moveDown,\n  };\n\n  document.addEventListener('keydown', (e) => {\n    if (gameOver) {\n      return;\n    }\n\n    const matrix = getRows();\n    const moveFunction = moveFunctions[e.key];\n\n    if (moveFunction) {\n      moveFunction(matrix);\n    }\n  });\n}\n\nfunction handleTouchEvents() {\n  let touchStartX = 0;\n  let touchStartY = 0;\n  let touchEndX = 0;\n  let touchEndY = 0;\n\n  document.addEventListener('touchstart', function (e) {\n    touchStartX = e.changedTouches[0].screenX;\n    touchStartY = e.changedTouches[0].screenY;\n  });\n\n  document.addEventListener('touchmove', function (e) {\n    touchEndX = e.changedTouches[0].screenX;\n    touchEndY = e.changedTouches[0].screenY;\n  });\n\n  document.addEventListener('touchend', function () {\n    handleGesture();\n  });\n\n  function handleGesture() {\n    const diffX = touchEndX - touchStartX;\n    const diffY = touchEndY - touchStartY;\n\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n      if (diffX > 0) {\n        moveRight(getRows());\n      } else {\n        moveLeft(getRows());\n      }\n    } else {\n      if (diffY > 0) {\n        moveDown(getRows());\n      } else {\n        moveUp(getRows());\n      }\n    }\n  }\n}\nstatusButton();\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}